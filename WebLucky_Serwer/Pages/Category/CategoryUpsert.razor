@page "/category/create"
@page "/category/create/{Id:int}"
@inject ICategoryRepository _cr
@inject NavigationManager _nm

<EditForm Model="Category" OnValidSubmit="UpsertCategory">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label class="form-label">Name</label>
        <InputText class="form-control" @bind-Value="Category.Name"></InputText>
        <ValidationMessage For="() => Category.Name"/>
    </div>
    <button type="submit" class="btn @(Title == "Create" ? "btn-primary" : "btn-danger")">@Title</button>
    <NavLink href="category" class="btn btn-secondary">Back to Category</NavLink>
</EditForm>

@code {
    private CategoryDTO Category { get; set; } = new CategoryDTO();
    private string Title { get; set; } = "Create";
    [Parameter]
    public int Id { get; set; }
    private int Count;
    private async Task UpsertCategory()
    {
        if (Id == 0) { await _cr.Create(Category); }
        else { await _cr.Update(Category); }
        _nm.NavigateTo("category");
    }
    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            Category = await _cr.Get(Id);
            Title = "Update";
        }
    }
}
