@page "/orderList"
@inject IOrderRepository _orderRepository
@inject NavigationManager _navigationManager

<div>
    <h4 class="card-title text-info">Order's List</h4>
    @if (OrderHeaders.Any())
    {
        <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="Radzen.HorizontalAlign.Left" ShowPagingSummary="true" Data="OrderHeaders" TItem="OrderHeaderDTO" LogicalFilterOperator="LogicalFilterOperator.Or">
            <Columns>
                <RadzenDataGridColumn Property="Id" Filterable="false" Title="ID" Frozen="true" Width="80px" />
                <RadzenDataGridColumn Property="Name" Title="Name" Frozen="true" />
                <RadzenDataGridColumn Property="PhoneNumber" Title="Phone" />
                <RadzenDataGridColumn Property="Email" Title="Email" />
                <RadzenDataGridColumn Property="OrderTotal" Title="Order Total" />
                <RadzenDataGridColumn Property="OrderDate" Title="Order Date" FormatString="{0:d}" />
                <RadzenDataGridColumn Property="Status" Title="Status" />
                <RadzenDataGridColumn Title="Details">
                    <Template Context="data">
                        <RadzenButton Click="(args=> OrderDetails(data.Id))" Text="Details" ButtonStyle="ButtonStyle.Success"></RadzenButton>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    }
</div>

@code {
    private IEnumerable<OrderHeaderDTO> OrderHeaders { get; set; } = new List<OrderHeaderDTO>();
    private bool IsLoading { get; set; } = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadOrders();
        }
    }
    private async Task LoadOrders()
    {
        IsLoading = true;
        StateHasChanged();
        var orderDTO = await _orderRepository.GetAll();
        OrderHeaders = orderDTO.Select(u => u.OrderHeader);
        IsLoading = false;
        StateHasChanged();
    }
    private void OrderDetails(int id)
    {
        _navigationManager.NavigateTo("/order/details/" + id);
    }
}
