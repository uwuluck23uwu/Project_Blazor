@page "/learnBlazor/lifecycle"

<_LifeCycleChild CountValue="@currentCount"></_LifeCycleChild>
<hr>
@foreach (var item in EventType)
{
    <h3 class="text-danger">@item</h3>
}
<hr>
<button class="btn btn-primary" @onclick="Increment">Count : @currentCount</button>

@code {
    int round = 0;
    private int currentCount = 0;
    List<string> EventType = new List<string>();
    private void Increment()
    {
        currentCount++;
    }
    protected override void OnInitialized()
    {
        EventType.Add("แม่ : เริ่มต้นทำงานเป็นครั้งแรก และทำครั้งเดียว");
    }
    protected override async Task OnInitializedAsync()
    {
        EventType.Add("แม่ Async : เริ่มต้นทำงานเป็นครั้งแรก และทำครั้งเดียว");
        await Task.Delay(1000);
    }
    protected override void OnParametersSet()
    {
        EventType.Add("แม่ : OnParametersSet is called");
    }
    protected override async Task OnParametersSetAsync()
    {
        EventType.Add("แม่ Async : OnParametersSetAsync is called");
        await Task.Delay(1000);
    }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            currentCount = 111;
        }
        else
        {
            currentCount = 999;
        }
        EventType.Add($"แม่ : OnAfterRender is called {currentCount}....[{firstRender}] {++round}");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        EventType.Add($"แม่ Async : OnAfterRenderAsync is called {currentCount}....[{firstRender}]");
    }
}